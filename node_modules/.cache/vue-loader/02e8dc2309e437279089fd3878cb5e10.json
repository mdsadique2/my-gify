{"remainingRequest":"/Codes/my-gify/node_modules/vue-loader/lib/index.js??vue-loader-options!/Codes/my-gify/src/components/searchResults.vue?vue&type=style&index=0&id=1ad6037d&scoped=true&lang=css&","dependencies":[{"path":"/Codes/my-gify/src/components/searchResults.vue","mtime":1565683599558},{"path":"/Codes/my-gify/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.searchResultsContainer {\n  background: #eee;\n  padding: 10px 20px;\n}\n.loader {\n  margin-top: 25px;\n  margin-bottom: 25px;\n  height: 50px;\n  opacity: 0.5;\n  font-size: 50px;\n}\n.item {\n  /*display: inline-block;*/\n  box-sizing: border-box;\n  padding: 10px;\n  width: 24%;\n  border: 1px solid #ddd;\n  margin: 10px .5%;\n  background: #fff;\n  border-radius: 2px;\n  text-transform: capitalize;\n  text-align: left;\n}\n.item img {\n  width: 100%;\n  height: auto;\n  min-height: 80px;\n}\n\n.item .controls {\n  color: rgba(180, 180, 180, 0.65);\n  position: absolute;\n  z-index: 50;\n  top: 30%;\n  left: 44%;\n  font-size: 50px;\n}\n\n.item .caption {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.item .controls.play {\n  visibility: hidden;\n}\n\n.item .share {\n  justify-content: flex-end;\n  color: #999;\n}\n\n.item .controls.pause {\n  visibility: visible;\n}\n.noData {\n  margin-top: 50px;\n}\n@media only screen and (max-width: 720px) {\n  .item {\n    width: 48%;\n    margin: 10px 1%;\n  }\n}\n\n@media only screen and (min-width: 721px) and (max-width: 1200px) {\n  .item {\n    width: 31%;\n    margin: 10px 1.66%;\n  }\n}\n",{"version":3,"sources":["searchResults.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"searchResults.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"searchResultsContainer\">\n      <div class=\"noData\" v-if=\"results === undefined || results.length === 0 && !loader\">\n        No Results found.\n      </div>\n\n      <div v-masonry transition-duration=\"0.3s\" item-selector=\".item\" v-if=\"results.length > 0\">\n        <div  v-masonry-tile class=\"item cursorPointer\" v-for=\"(data, index) in results\" @click=\"showImageDetails(data, index)\">\n          <img\n            :src=\"searchType === 'category' ? data.gif.images.downsized.url : data.images.downsized.url\"\n            :alt=\"searchType === 'category' ? data.gif.title : data.title\"/>\n          <i @click.stop=\"controlGif($event, data, 'play')\" class=\"controls play far fa-play-circle\"></i>\n          <i @click.stop=\"controlGif($event, data, 'pause')\" class=\"controls pause far fa-pause-circle\"></i>\n          <div class=\"displayFlex\">\n            <div class=\"caption width50\">\n              {{searchType === 'category' ? data.gif.title : data.title}}\n            </div>\n            <div class=\"width50 displayFlex share\">\n              <i @click.stop=\"shareGif()\" class=\"fas fa-share-alt-square\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"loader\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n      </div>\n      <!-- to show image detail popUp -->\n      <imageDetail :imageData=\"results\" :currentIndex=\"currentImageIndex\" v-if=\"showImageDetailsPanel\" @closeFunction=\"closeDetailsPanel\"></imageDetail>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport imageDetail from './imageDetailPanel.vue'\nimport {VueMasonryPlugin} from 'vue-masonry';\nVue.use(VueMasonryPlugin)\n\nexport default {\n  name: 'searchResults',\n  components: {\n    imageDetail\n  },\n  props: {\n    responseObj: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    concatResults: {\n      type: Boolean,\n      default: false\n    },\n    sizeKey: {\n      type: String,\n      default: 'downsized'\n    },\n    loader: {\n      type: Boolean,\n      default: false\n    },\n    searchType: {\n      type: String,\n      default: ''\n    },\n    searchKey: {\n      type: String,\n      default: ''\n    },\n    searchAsTextFunction: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data () {\n    return {\n      results: [],\n      currentPage: 0,\n      placeholderCounts: 10,\n      randomColorArray : [],\n      currentImageIndex: 0,\n      showImageDetailsPanel: false\n    }\n  },\n  created () {\n    this.randomColor();\n  },\n  methods: {\n    controlGif (event, data, type) {\n      var parent = event.target.parentNode;\n      var img = parent.getElementsByTagName('img')[0];\n      var play = parent.getElementsByClassName('play')[0];\n      var pause = parent.getElementsByClassName('pause')[0];\n      if (type === 'pause') {\n        play.style.visibility = \"visible\";\n        pause.style.visibility = \"hidden\";\n        img.src = (data.images || data.gif.images).downsized_still.url;\n      } else {\n        play.style.visibility = \"hidden\";\n        pause.style.visibility = \"visible\";\n        img.src = (data.images || data.gif.images).downsized.url;\n      }\n    },\n\n    tryTextSearch () {\n      this.$emit('searchAsTextFunction');\n    },\n\n    shareGif () {\n      alert('Share feature is not available now!')\n    },\n\n    closeDetailsPanel () {\n      this.showImageDetailsPanel = false;\n    },\n    randomColor () {\n      for (var i = 0; i < this.placeholderCounts; i++) {\n        this.randomColorArray.push('#' + Math.floor(Math.random()*16777215).toString(16));\n      }\n    },\n    updateResults (data) {\n      var that = this;\n      var result = data;\n      if (this.concatResults === true) {\n        this.results = this.results.concat(data);\n        return;\n      }\n      this.results = [];\n      setTimeout(function(){\n        that.results = result;\n      }, 1000)\n    },\n    showImageDetails (data, index) {\n      this.currentImageIndex = index;\n      this.showImageDetailsPanel = true;\n    }\n  },\n  watch: {\n    responseObj (newVal, oldVal) {\n      this.updateResults(newVal.data);\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  .searchResultsContainer {\n    background: #eee;\n    padding: 10px 20px;\n  }\n  .loader {\n    margin-top: 25px;\n    margin-bottom: 25px;\n    height: 50px;\n    opacity: 0.5;\n    font-size: 50px;\n  }\n  .item {\n    /*display: inline-block;*/\n    box-sizing: border-box;\n    padding: 10px;\n    width: 24%;\n    border: 1px solid #ddd;\n    margin: 10px .5%;\n    background: #fff;\n    border-radius: 2px;\n    text-transform: capitalize;\n    text-align: left;\n  }\n  .item img {\n    width: 100%;\n    height: auto;\n    min-height: 80px;\n  }\n\n  .item .controls {\n    color: rgba(180, 180, 180, 0.65);\n    position: absolute;\n    z-index: 50;\n    top: 30%;\n    left: 44%;\n    font-size: 50px;\n  }\n\n  .item .caption {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .item .controls.play {\n    visibility: hidden;\n  }\n\n  .item .share {\n    justify-content: flex-end;\n    color: #999;\n  }\n\n  .item .controls.pause {\n    visibility: visible;\n  }\n  .noData {\n    margin-top: 50px;\n  }\n  @media only screen and (max-width: 720px) {\n    .item {\n      width: 48%;\n      margin: 10px 1%;\n    }\n  }\n\n  @media only screen and (min-width: 721px) and (max-width: 1200px) {\n    .item {\n      width: 31%;\n      margin: 10px 1.66%;\n    }\n  }\n</style>\n"]}]}