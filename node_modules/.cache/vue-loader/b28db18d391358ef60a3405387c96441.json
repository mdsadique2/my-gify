{"remainingRequest":"/Codes/my-gify/node_modules/vue-loader/lib/index.js??vue-loader-options!/Codes/my-gify/src/components/imageDetailPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Codes/my-gify/src/components/imageDetailPanel.vue","mtime":1565683599558},{"path":"/Codes/my-gify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Gify from '../sdk/gify'\nimport userDetail from './userDetails.vue'\n\nexport default {\n  name: 'imageDetail',\n  components: {\n    userDetail\n  },\n  props: {\n    closeFunction: {\n      type: Function,\n      default: () => {\n      }\n    },\n    imageData: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    currentIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      currentImage: {},\n      currentImageDetails: {},\n      currentImageUrl: '',\n      displayIndex: 0\n    }\n  },\n  created () {\n    this.getCurrentImageSelection();\n  },\n  methods: {\n    getGifDetails () {\n      Gify.gifByID(this.currentImage.id||this.currentImage.gif.id)\n      .then((response) => {\n        this.currentImageDetails = response.data\n      })\n      .catch((err) => {\n\n      })\n    },\n    getCurrentImageSelection (index) {\n      if (index === undefined) {\n        this.displayIndex = this.currentIndex;\n      } else {\n        this.displayIndex = index;\n      }\n      this.currentImage = this.imageData.length > 0 ? this.imageData[this.displayIndex] : {}\n      this.currentImageUrl = (this.currentImage.images || this.currentImage.gif.images).downsized_medium.url;\n      this.getGifDetails();\n    },\n    change (dir) {\n      if (dir === 'next') {\n        this.displayIndex = this.displayIndex + 1;\n      } else {\n        this.displayIndex = this.displayIndex - 1;\n      }\n      this.getCurrentImageSelection(this.displayIndex);\n    },\n    closePanel () {\n      this.$emit('closeFunction');\n    }\n  }\n}\n",{"version":3,"sources":["imageDetailPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"imageDetailPanel.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"width100 imageDetailsPanel\">\n      <div class=\"imageDetailsContainer displayFlex\">\n        <div class=\"imageCard\">\n          <img :src='currentImageUrl' />\n          <i class=\"navigateIcons navigateIcon--left fas fa-arrow-circle-left\" @click=\"change('prev')\"></i>\n          <i class=\"navigateIcons navigateIcon--right fas fa-arrow-circle-right\" @click=\"change('next')\"></i>\n        </div>\n\n        <div class=\"otherDetails\">\n          <div class=\"titleBar positionSticky\">\n            {{currentImageDetails.title}}\n            <i class=\"closePanelIcon far fa-times-circle\" @click=\"closePanel()\"></i>\n          </div>\n          <div>\n            <br>\n            <userDetail :userObject=\"currentImageDetails.user\"></userDetail>\n            <br>\n            <br>\n\n            <div class=\"keyVal\">\n              <div class=\"key\">Short URL :</div>\n              <div class=\"val\"><a :href=\"currentImageDetails.bitly_url\" target=\"_blank\">{{currentImageDetails.bitly_url}}</a></div>\n            </div>\n            <div class=\"keyVal\">\n              <div class=\"key\">Source URL :</div>\n              <div class=\"val\"><a :href=\"currentImageDetails.source\" target=\"_blank\">{{currentImageDetails.source}}</a></div>\n            </div>\n            <div class=\"keyVal\">\n              <div class=\"key\">Ratings :</div>\n              <div class=\"val\">{{currentImageDetails.rating}}</div>\n            </div>\n          </div>\n          <!-- <div><pre>{{currentImage}}</pre></div> -->\n        </div>\n\n      </div>\n    </div><!-- End of myCtrl div -->\n  </div>\n</template>\n\n<script>\nimport Gify from '../sdk/gify'\nimport userDetail from './userDetails.vue'\n\nexport default {\n  name: 'imageDetail',\n  components: {\n    userDetail\n  },\n  props: {\n    closeFunction: {\n      type: Function,\n      default: () => {\n      }\n    },\n    imageData: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    currentIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      currentImage: {},\n      currentImageDetails: {},\n      currentImageUrl: '',\n      displayIndex: 0\n    }\n  },\n  created () {\n    this.getCurrentImageSelection();\n  },\n  methods: {\n    getGifDetails () {\n      Gify.gifByID(this.currentImage.id||this.currentImage.gif.id)\n      .then((response) => {\n        this.currentImageDetails = response.data\n      })\n      .catch((err) => {\n\n      })\n    },\n    getCurrentImageSelection (index) {\n      if (index === undefined) {\n        this.displayIndex = this.currentIndex;\n      } else {\n        this.displayIndex = index;\n      }\n      this.currentImage = this.imageData.length > 0 ? this.imageData[this.displayIndex] : {}\n      this.currentImageUrl = (this.currentImage.images || this.currentImage.gif.images).downsized_medium.url;\n      this.getGifDetails();\n    },\n    change (dir) {\n      if (dir === 'next') {\n        this.displayIndex = this.displayIndex + 1;\n      } else {\n        this.displayIndex = this.displayIndex - 1;\n      }\n      this.getCurrentImageSelection(this.displayIndex);\n    },\n    closePanel () {\n      this.$emit('closeFunction');\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  .imageDetailsPanel {\n    position: fixed;\n    display: flex;\n    top: 0px;\n    left: 0px;\n    background: rgba(0,0,0,0.75);\n    overflow: auto;\n    height: 100vh;\n    width: 100%;\n    padding: 20px;\n    z-index: 1000;\n    box-sizing: border-box;\n  }\n\n  .imageDetailsContainer {\n    width: 98%;\n    height: 98%;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n  }\n\n  .imageCard {\n    position: relative;\n    width: 40%;\n    height: 100%;\n    padding: 10px 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-right: 1px solid #ddd;\n  }\n\n  .imageCard img {\n    width: 100%;\n    height: auto;\n  }\n\n  .otherDetails {\n    position: relative;\n    width: 60%;\n    height: 100%;\n    overflow: auto;\n    padding: 0 25px;\n  }\n\n  .otherDetails .titleBar {\n    text-align: left;\n    padding: 20px 0px 10px;\n    margin: 5px 0px;\n    text-transform: capitalize;\n    border-bottom: 1px solid #ddd;\n    font-size: 20px;\n  }\n\n  .closePanelIcon {\n    position: absolute;\n    right: 0px;\n    top: -5px;\n    font-size: 30px;\n    color: #bbb;\n    cursor: pointer;\n  }\n  .closePanelIcon:hover {\n    color: #999;\n  }\n  .navigateIcons {\n    position: absolute;\n    top: 40%;\n    font-size: 25px;\n    cursor: pointer;\n  }\n\n  .navigateIcon--left {\n    left: 5px;\n  }\n  .navigateIcon--right {\n    right: 5px;\n  }\n\n  .keyVal {\n    display: flex;\n    text-align: left;\n    font-size: 14px;\n    padding-bottom: 10px;\n    margin-bottom: 5px;\n    border-bottom: 1px solid #eee;\n  }\n  .keyVal .key {\n    width: 25%;\n  }\n  .keyVal .val {\n    width: 75%;\n  }\n</style>\n"]}]}