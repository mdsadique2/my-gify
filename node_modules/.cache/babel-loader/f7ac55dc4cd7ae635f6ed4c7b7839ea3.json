{"remainingRequest":"/Codes/my-gify/node_modules/thread-loader/dist/cjs.js!/Codes/my-gify/node_modules/babel-loader/lib/index.js!/Codes/my-gify/node_modules/eslint-loader/index.js??ref--13-0!/Codes/my-gify/src/utils/common.js","dependencies":[{"path":"/Codes/my-gify/src/utils/common.js","mtime":1565683599560},{"path":"/Codes/my-gify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Codes/my-gify/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport default {\n  debounce: debounce\n};",{"version":3,"sources":["/Codes/my-gify/src/utils/common.js"],"names":["debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,SAAXA,QAAW,CAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiC;AAC9C,MAAIC,OAAJ;AACA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,IAAI,GAAGC,SAAX;;AACA,QAAIC,KAAK,GAAG,SAARA,KAAQ,GAAY;AACtBJ,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBF,IAAI,CAACQ,KAAL,CAAWJ,OAAX,EAAoBC,IAApB;AACjB,KAHD;;AAIA,QAAII,OAAO,GAAGP,SAAS,IAAI,CAACC,OAA5B;AACAO,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGQ,UAAU,CAACJ,KAAD,EAAQN,IAAR,CAApB;AACA,QAAIQ,OAAJ,EAAaT,IAAI,CAACQ,KAAL,CAAWJ,OAAX,EAAoBC,IAApB;AACd,GAXD;AAYD,CAdD;;AAgBA,eAAe;AACbN,EAAAA,QAAQ,EAAEA;AADG,CAAf","sourcesContent":["var debounce = function (func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nexport default {\n  debounce: debounce\n}\n"]}]}